/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import {
  IsString,
  IsOptional,
  ValidateNested,
  IsBoolean,
} from "class-validator";
import { EventTypeUpdateManyWithoutTeamsInput } from "./EventTypeUpdateManyWithoutTeamsInput";
import { Type } from "class-transformer";
import { MembershipUpdateManyWithoutTeamsInput } from "./MembershipUpdateManyWithoutTeamsInput";

@InputType()
class TeamUpdateInput {
  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  bio?: string | null;

  @ApiProperty({
    required: false,
    type: () => EventTypeUpdateManyWithoutTeamsInput,
  })
  @ValidateNested()
  @Type(() => EventTypeUpdateManyWithoutTeamsInput)
  @IsOptional()
  @Field(() => EventTypeUpdateManyWithoutTeamsInput, {
    nullable: true,
  })
  eventTypes?: EventTypeUpdateManyWithoutTeamsInput;

  @ApiProperty({
    required: false,
    type: Boolean,
  })
  @IsBoolean()
  @IsOptional()
  @Field(() => Boolean, {
    nullable: true,
  })
  hideBranding?: boolean;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  logo?: string | null;

  @ApiProperty({
    required: false,
    type: () => MembershipUpdateManyWithoutTeamsInput,
  })
  @ValidateNested()
  @Type(() => MembershipUpdateManyWithoutTeamsInput)
  @IsOptional()
  @Field(() => MembershipUpdateManyWithoutTeamsInput, {
    nullable: true,
  })
  members?: MembershipUpdateManyWithoutTeamsInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  slug?: string | null;
}

export { TeamUpdateInput as TeamUpdateInput };
