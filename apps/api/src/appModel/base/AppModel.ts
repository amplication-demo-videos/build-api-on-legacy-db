/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { ObjectType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { ApiKey } from "../../apiKey/base/ApiKey";
import {
  ValidateNested,
  IsOptional,
  IsEnum,
  IsDate,
  IsString,
} from "class-validator";
import { Type } from "class-transformer";
import { EnumAppModelCategories } from "./EnumAppModelCategories";
import { Credential } from "../../credential/base/Credential";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { JsonValue } from "type-fest";
import { Webhook } from "../../webhook/base/Webhook";

@ObjectType()
class AppModel {
  @ApiProperty({
    required: false,
    type: () => [ApiKey],
  })
  @ValidateNested()
  @Type(() => ApiKey)
  @IsOptional()
  apiKey?: Array<ApiKey>;

  @ApiProperty({
    required: true,
    enum: EnumAppModelCategories,
    isArray: true,
  })
  @IsEnum(EnumAppModelCategories, {
    each: true,
  })
  @IsOptional()
  @Field(() => [EnumAppModelCategories], {
    nullable: true,
  })
  categories?: Array<
    "calendar" | "messaging" | "other" | "payment" | "video" | "web3"
  >;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  createdAt!: Date;

  @ApiProperty({
    required: false,
    type: () => [Credential],
  })
  @ValidateNested()
  @Type(() => Credential)
  @IsOptional()
  credentials?: Array<Credential>;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  dirName!: string;

  @ApiProperty({
    required: true,
    type: String,
  })
  @IsString()
  @Field(() => String)
  id!: string;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  keys!: JsonValue;

  @ApiProperty({
    required: true,
  })
  @IsDate()
  @Type(() => Date)
  @Field(() => Date)
  updatedAt!: Date;

  @ApiProperty({
    required: false,
    type: () => [Webhook],
  })
  @ValidateNested()
  @Type(() => Webhook)
  @IsOptional()
  webhook?: Array<Webhook>;
}

export { AppModel as AppModel };
